---
export interface Props {
  latitude: number
  longitude: number
  zoom: number
  mapstyle: string
  container: string
  accesstoken: string

  /** If `false`, the map will not respond to interaction.  This is a static map built with the full web map rendering API. */
  interactive?: boolean
  containerstyle?: string
}

const { latitude, longitude, zoom, mapstyle, container, accesstoken, interactive, containerstyle = "height: 61.8vh"} = Astro.props

---

<mapbox-map
  data-latitude={latitude}
  data-longitude={longitude}
  data-zoom={zoom}
  data-mapstyle={mapstyle}
  data-container={container}
  data-accesstoken={accesstoken}
  data-interactive={interactive}
  data-containerstyle={containerstyle}
>
<div id={container} style={containerstyle}></div>
<script>
  import { default as mapboxgl } from "mapbox-gl"
  import "mapbox-gl/dist/mapbox-gl.css"

  class MapboxMap extends HTMLElement {
    constructor() {
      super()

      mapboxgl.Map.accessToken = this.dataset.accesstoken
      var map = new mapboxgl.Map({
        container: this.dataset.container,
        interactive: JSON.parse(this.dataset.interactive),
        center: [this.dataset.longitude, this.dataset.latitude],
        zoom: this.dataset.zoom,
        style: this.dataset.mapstyle
      })
    }
  }

  window.customElements.define("mapbox-map", MapboxMap);
</script>